Search.setIndex({"alltitles": {"Abstract Function Definitions": [[8, "abstract-function-definitions"]], "Advanced Usage": [[0, null]], "Application Programming Interface": [[1, null]], "Basic Usage": [[3, null]], "Careful Synergy With OOP": [[6, "careful-synergy-with-oop"]], "Classes": [[4, null]], "Command Line Configuration Options": [[5, null]], "Comparison with Other Multiple Dispatch Implementations": [[6, null]], "Construction": [[12, "construction"]], "Conversion With convert": [[7, "conversion-with-convert"]], "Conversion and Promotion": [[7, null]], "Customisation": [[12, "customisation"]], "Decorators": [[4, "decorators"]], "Default Arguments": [[11, "default-arguments"]], "Define Multiple Methods at Once": [[8, "define-multiple-methods-at-once"]], "Definition: faithful type": [[15, null]], "Design Goal: Mimic Julia\u2019s Type System": [[6, "design-goal-mimic-julia-s-type-system"]], "Directly Invoke a Method": [[8, "directly-invoke-a-method"]], "Dispatchers": [[1, "module-plum.dispatcher"], [14, "dispatchers"]], "Example: NDArray": [[12, "example-ndarray"]], "Extend a Function From Another Package": [[8, "extend-a-function-from-another-package"]], "Feature Rich": [[6, "feature-rich"]], "Forward References": [[4, "forward-references"]], "Functions": [[1, "module-plum.function"]], "I Really Want Keyword Arguments!": [[11, "i-really-want-keyword-arguments"]], "Integration with Linters and mypy": [[9, null]], "Keyword Arguments": [[11, null]], "Kind": [[12, "kind"]], "Method Precedence": [[13, null]], "Methods": [[1, "module-plum.method"]], "ModuleType": [[15, "moduletype"]], "Other Utilities": [[1, "module-plum.repr"]], "Overload Support": [[9, "overload-support"]], "PLUM_SIMPLE_DOC": [[5, "plum-simple-doc"]], "Parametric Classes": [[1, "module-plum.parametric"], [6, "parametric-classes"], [12, null]], "Performance and Faithful Types": [[15, "performance-and-faithful-types"]], "Plum": [[10, null]], "Powered by Beartype": [[6, "powered-by-beartype"]], "PromisedType": [[15, "promisedtype"]], "Promotion": [[7, "promotion"]], "Promotion and Conversion": [[1, "module-plum.promotion"]], "Redefinition Warnings": [[14, "redefinition-warnings"]], "Return Types": [[7, "return-types"]], "Scope of Functions": [[14, null]], "Signatures": [[1, "module-plum.signature"]], "Support for IPython Autoreload": [[2, null]], "Types": [[1, "module-plum.type"], [15, null]], "Union Aliases": [[1, "module-plum.alias"], [16, null]], "Ways to Dispatch": [[8, null]], "Why Doesn\u2019t Dispatch Fully Support Keyword Arguments?": [[11, "why-doesn-t-dispatch-fully-support-keyword-arguments"]], "iPython AutoReload": [[1, "module-plum.autoreload"]], "typing.Literal (and Val)": [[12, "typing-literal-and-val"]]}, "docnames": ["advanced_usage", "api", "autoreload", "basic_usage", "classes", "command_line", "comparison", "conversion_promotion", "dispatch", "integration", "intro", "keyword_arguments", "parametric", "precedence", "scope", "types", "union_aliases"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["advanced_usage.md", "api.rst", "autoreload.md", "basic_usage.md", "classes.md", "command_line.md", "comparison.md", "conversion_promotion.md", "dispatch.md", "integration.md", "intro.md", "keyword_arguments.md", "parametric.md", "precedence.md", "scope.md", "types.md", "union_aliases.md"], "indexentries": {"abstract() (plum.dispatcher.dispatcher method)": [[1, "plum.dispatcher.Dispatcher.abstract", false]], "activate_autoreload() (in module plum.autoreload)": [[1, "plum.autoreload.activate_autoreload", false]], "activate_union_aliases() (in module plum.alias)": [[1, "plum.alias.activate_union_aliases", false]], "add_conversion_method() (in module plum.promotion)": [[1, "plum.promotion.add_conversion_method", false]], "add_promotion_rule() (in module plum.promotion)": [[1, "plum.promotion.add_promotion_rule", false]], "ambiguouslookuperror": [[1, "plum.resolver.AmbiguousLookupError", false]], "append_default_args() (in module plum.signature)": [[1, "plum.signature.append_default_args", false]], "argsort() (in module plum.util)": [[1, "plum.util.argsort", false]], "classes (plum.dispatcher.dispatcher attribute)": [[1, "plum.dispatcher.Dispatcher.classes", false]], "clear_all_cache() (in module plum.dispatcher)": [[1, "plum.dispatcher.clear_all_cache", false]], "clear_cache() (plum.dispatcher.dispatcher method)": [[1, "plum.dispatcher.Dispatcher.clear_cache", false]], "clear_cache() (plum.function.function method)": [[1, "plum.function.Function.clear_cache", false]], "comparable (class in plum.util)": [[1, "plum.util.Comparable", false]], "compute_distance() (plum.signature.signature method)": [[1, "plum.signature.Signature.compute_distance", false]], "compute_mismatches() (plum.signature.signature method)": [[1, "plum.signature.Signature.compute_mismatches", false]], "conversion_method() (in module plum.promotion)": [[1, "plum.promotion.conversion_method", false]], "convert() (in module plum.promotion)": [[1, "plum.promotion.convert", false]], "covariantmeta (class in plum.parametric)": [[1, "plum.parametric.CovariantMeta", false]], "deactivate_autoreload() (in module plum.autoreload)": [[1, "plum.autoreload.deactivate_autoreload", false]], "deactivate_union_aliases() (in module plum.alias)": [[1, "plum.alias.deactivate_union_aliases", false]], "dispatch (in module plum.dispatcher)": [[1, "plum.dispatcher.dispatch", false]], "dispatch() (plum.function.function method)": [[1, "plum.function.Function.dispatch", false]], "dispatch_multi() (plum.function.function method)": [[1, "plum.function.Function.dispatch_multi", false]], "dispatcher (class in plum.dispatcher)": [[1, "plum.dispatcher.Dispatcher", false]], "expand_varargs() (plum.signature.signature method)": [[1, "plum.signature.Signature.expand_varargs", false]], "extract_return_type() (in module plum.method)": [[1, "plum.method.extract_return_type", false]], "from_callable() (plum.signature.signature static method)": [[1, "plum.signature.Signature.from_callable", false]], "function (class in plum.function)": [[1, "plum.function.Function", false]], "functions (plum.dispatcher.dispatcher attribute)": [[1, "plum.dispatcher.Dispatcher.functions", false]], "get_class() (in module plum.util)": [[1, "plum.util.get_class", false]], "get_context() (in module plum.util)": [[1, "plum.util.get_context", false]], "has_varargs (plum.signature.signature attribute)": [[1, "plum.signature.Signature.has_varargs", false]], "implementation (plum.method.method attribute)": [[1, "plum.method.Method.implementation", false]], "invoke() (plum.function.function method)": [[1, "plum.function.Function.invoke", false]], "is_comparable() (plum.util.comparable method)": [[1, "plum.util.Comparable.is_comparable", false]], "is_faithful (plum.signature.signature attribute)": [[1, "plum.signature.Signature.is_faithful", false]], "is_faithful() (in module plum.type)": [[1, "plum.type.is_faithful", false]], "is_in_class() (in module plum.util)": [[1, "plum.util.is_in_class", false]], "kind (class in plum.parametric)": [[1, "plum.parametric.Kind", false]], "kind() (in module plum.parametric)": [[1, "plum.parametric.kind", false]], "match() (plum.signature.signature method)": [[1, "plum.signature.Signature.match", false]], "method (class in plum.method)": [[1, "plum.method.Method", false]], "methods (plum.function.function property)": [[1, "plum.function.Function.methods", false]], "missing (class in plum.util)": [[1, "plum.util.Missing", false]], "module": [[1, "module-plum.alias", false], [1, "module-plum.autoreload", false], [1, "module-plum.dispatcher", false], [1, "module-plum.function", false], [1, "module-plum.method", false], [1, "module-plum.parametric", false], [1, "module-plum.promotion", false], [1, "module-plum.repr", false], [1, "module-plum.resolver", false], [1, "module-plum.signature", false], [1, "module-plum.type", false], [1, "module-plum.util", false]], "moduletype (class in plum.type)": [[1, "plum.type.ModuleType", false]], "multi() (plum.dispatcher.dispatcher method)": [[1, "plum.dispatcher.Dispatcher.multi", false]], "notfoundlookuperror": [[1, "plum.resolver.NotFoundLookupError", false]], "owner (plum.function.function property)": [[1, "plum.function.Function.owner", false]], "parametric() (in module plum.parametric)": [[1, "plum.parametric.parametric", false]], "plum.alias": [[1, "module-plum.alias", false]], "plum.autoreload": [[1, "module-plum.autoreload", false]], "plum.dispatcher": [[1, "module-plum.dispatcher", false]], "plum.function": [[1, "module-plum.function", false]], "plum.method": [[1, "module-plum.method", false]], "plum.parametric": [[1, "module-plum.parametric", false]], "plum.promotion": [[1, "module-plum.promotion", false]], "plum.repr": [[1, "module-plum.repr", false]], "plum.resolver": [[1, "module-plum.resolver", false]], "plum.signature": [[1, "module-plum.signature", false]], "plum.type": [[1, "module-plum.type", false]], "plum.util": [[1, "module-plum.util", false]], "precedence (plum.signature.signature attribute)": [[1, "plum.signature.Signature.precedence", false]], "promisedtype (class in plum.type)": [[1, "plum.type.PromisedType", false]], "promote() (in module plum.promotion)": [[1, "plum.promotion.promote", false]], "register() (plum.function.function method)": [[1, "plum.function.Function.register", false]], "repr_mismatch() (plum.method.method method)": [[1, "plum.method.Method.repr_mismatch", false]], "repr_pyfunction() (in module plum.repr)": [[1, "plum.repr.repr_pyfunction", false]], "repr_short() (in module plum.repr)": [[1, "plum.repr.repr_short", false]], "repr_source_path() (in module plum.repr)": [[1, "plum.repr.repr_source_path", false]], "repr_type() (in module plum.repr)": [[1, "plum.repr.repr_type", false]], "resolve_method() (plum.function.function method)": [[1, "plum.function.Function.resolve_method", false]], "resolve_type_hint() (in module plum.type)": [[1, "plum.type.resolve_type_hint", false]], "retrieve() (plum.type.moduletype method)": [[1, "plum.type.ModuleType.retrieve", false]], "return_type (plum.method.method attribute)": [[1, "plum.method.Method.return_type", false]], "rich_repr() (in module plum.repr)": [[1, "plum.repr.rich_repr", false]], "set_union_alias() (in module plum.alias)": [[1, "plum.alias.set_union_alias", false]], "signature (class in plum.signature)": [[1, "plum.signature.Signature", false]], "type_mapping (in module plum.type)": [[1, "plum.type.type_mapping", false]], "type_nonparametric() (in module plum.parametric)": [[1, "plum.parametric.type_nonparametric", false]], "type_parameter() (in module plum.parametric)": [[1, "plum.parametric.type_parameter", false]], "type_unparametrized() (in module plum.parametric)": [[1, "plum.parametric.type_unparametrized", false]], "typehint (in module plum.util)": [[1, "plum.util.TypeHint", false]], "types (plum.signature.signature attribute)": [[1, "plum.signature.Signature.types", false]], "varargs (plum.signature.signature attribute)": [[1, "plum.signature.Signature.varargs", false]], "warn_redefinition (plum.dispatcher.dispatcher attribute)": [[1, "plum.dispatcher.Dispatcher.warn_redefinition", false]], "wrap_lambda() (in module plum.util)": [[1, "plum.util.wrap_lambda", false]]}, "objects": {"plum": [[1, 0, 0, "-", "alias"], [1, 0, 0, "-", "autoreload"], [1, 0, 0, "-", "dispatcher"], [1, 0, 0, "-", "function"], [1, 0, 0, "-", "method"], [1, 0, 0, "-", "parametric"], [1, 0, 0, "-", "promotion"], [1, 0, 0, "-", "repr"], [1, 0, 0, "-", "resolver"], [1, 0, 0, "-", "signature"], [1, 0, 0, "-", "type"], [1, 0, 0, "-", "util"]], "plum.alias": [[1, 1, 1, "", "activate_union_aliases"], [1, 1, 1, "", "deactivate_union_aliases"], [1, 1, 1, "", "set_union_alias"]], "plum.autoreload": [[1, 1, 1, "", "activate_autoreload"], [1, 1, 1, "", "deactivate_autoreload"]], "plum.dispatcher": [[1, 2, 1, "", "Dispatcher"], [1, 1, 1, "", "clear_all_cache"], [1, 5, 1, "", "dispatch"]], "plum.dispatcher.Dispatcher": [[1, 3, 1, "", "abstract"], [1, 4, 1, "", "classes"], [1, 3, 1, "", "clear_cache"], [1, 4, 1, "", "functions"], [1, 3, 1, "", "multi"], [1, 4, 1, "", "warn_redefinition"]], "plum.function": [[1, 2, 1, "", "Function"]], "plum.function.Function": [[1, 3, 1, "", "clear_cache"], [1, 3, 1, "", "dispatch"], [1, 3, 1, "", "dispatch_multi"], [1, 3, 1, "", "invoke"], [1, 6, 1, "", "methods"], [1, 6, 1, "", "owner"], [1, 3, 1, "", "register"], [1, 3, 1, "", "resolve_method"]], "plum.method": [[1, 2, 1, "", "Method"], [1, 1, 1, "", "extract_return_type"]], "plum.method.Method": [[1, 4, 1, "", "implementation"], [1, 3, 1, "", "repr_mismatch"], [1, 4, 1, "", "return_type"]], "plum.parametric": [[1, 2, 1, "", "CovariantMeta"], [1, 2, 1, "", "Kind"], [1, 1, 1, "", "kind"], [1, 1, 1, "", "parametric"], [1, 1, 1, "", "type_nonparametric"], [1, 1, 1, "", "type_parameter"], [1, 1, 1, "", "type_unparametrized"]], "plum.promotion": [[1, 1, 1, "", "add_conversion_method"], [1, 1, 1, "", "add_promotion_rule"], [1, 1, 1, "", "conversion_method"], [1, 1, 1, "", "convert"], [1, 1, 1, "", "promote"]], "plum.repr": [[1, 1, 1, "", "repr_pyfunction"], [1, 1, 1, "", "repr_short"], [1, 1, 1, "", "repr_source_path"], [1, 1, 1, "", "repr_type"], [1, 1, 1, "", "rich_repr"]], "plum.resolver": [[1, 7, 1, "", "AmbiguousLookupError"], [1, 7, 1, "", "NotFoundLookupError"]], "plum.signature": [[1, 2, 1, "", "Signature"], [1, 1, 1, "", "append_default_args"]], "plum.signature.Signature": [[1, 3, 1, "", "compute_distance"], [1, 3, 1, "", "compute_mismatches"], [1, 3, 1, "", "expand_varargs"], [1, 3, 1, "", "from_callable"], [1, 4, 1, "", "has_varargs"], [1, 4, 1, "", "is_faithful"], [1, 3, 1, "", "match"], [1, 4, 1, "", "precedence"], [1, 4, 1, "", "types"], [1, 4, 1, "", "varargs"]], "plum.type": [[1, 2, 1, "", "ModuleType"], [1, 2, 1, "", "PromisedType"], [1, 1, 1, "", "is_faithful"], [1, 1, 1, "", "resolve_type_hint"], [1, 5, 1, "", "type_mapping"]], "plum.type.ModuleType": [[1, 3, 1, "", "retrieve"]], "plum.util": [[1, 2, 1, "", "Comparable"], [1, 2, 1, "", "Missing"], [1, 4, 1, "", "TypeHint"], [1, 1, 1, "", "argsort"], [1, 1, 1, "", "get_class"], [1, 1, 1, "", "get_context"], [1, 1, 1, "", "is_in_class"], [1, 1, 1, "", "wrap_lambda"]], "plum.util.Comparable": [[1, 3, 1, "", "is_comparable"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:data", "6": "py:property", "7": "py:exception"}, "terms": {"": [1, 2, 3, 8, 9, 12, 15, 16], "0": [1, 3, 4, 6, 7, 8, 11, 12, 14, 15], "000": 15, "0x": 14, "0x7f8cb8813eb0": 4, "1": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16], "10": 12, "100": 15, "11": [9, 12], "12": 12, "2": [3, 4, 6, 7, 8, 12, 15], "24": 15, "26": 13, "2c6fe56c8a98": 4, "2x2": 6, "3": [1, 3, 4, 6, 7, 9, 11, 12], "4": [4, 11], "5": [4, 7, 15], "585": 15, "6": [4, 15], "68": 15, "7": 15, "9": 15, "A": [1, 6, 8, 9, 12, 15, 16], "As": [7, 11], "At": 9, "But": 3, "By": 9, "For": [1, 3, 4, 6, 9, 11, 12, 14, 15, 16], "If": [1, 2, 4, 14, 15, 16], "In": [1, 9, 11, 12, 14, 15, 16], "It": [11, 12, 14, 15], "Its": 0, "NOT": 1, "No": [7, 8], "Not": [4, 11, 12], "On": 15, "Or": 15, "That": [6, 12, 15], "The": [1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 15], "Then": 8, "There": 6, "These": 12, "To": [1, 2, 4, 12, 14, 15, 16], "With": 5, "__add__": 4, "__all__": 9, "__faithful__": [1, 15], "__getindex__": 12, "__infer_type_parameter__": [1, 12], "__init__": [1, 4, 7, 12, 14], "__init_type_parameter__": [1, 6, 12], "__instancecheck__": [6, 15], "__inter_type_parameter__": 1, "__le__": 1, "__le_type_parameter__": [1, 6, 12], "__main__": [4, 5, 6, 8, 16], "__name__": [3, 6, 7, 8, 11, 12, 13, 15], "__repr__": [1, 16], "__str__": [1, 16], "_conversioncal": 1, "_f": 11, "_faithful_": 1, "_missingtyp": 1, "_name": 4, "_repr_mimebundle_": 1, "_type_repr": 1, "abov": [7, 9], "absolut": 6, "abstract": [1, 5], "abstractli": 8, "access": 15, "accident": 14, "accord": 6, "accur": 16, "achiev": 15, "across": 11, "activ": [1, 2, 16], "activate_autoreload": [1, 2], "activate_union_alias": [1, 16], "ad": 4, "add": [1, 7, 8, 9, 16], "add_5_faith": 15, "add_5_unfaith": 15, "add_conversion_method": [1, 7], "add_promotion_rul": [1, 7], "addit": [9, 14, 16], "after": [1, 9, 15, 16], "again": 1, "against": 11, "algorithm": 12, "alia": [1, 16], "alias": 6, "all": [1, 3, 5, 6, 8, 9, 11, 15, 16], "allow": 3, "allow_fail": 1, "alreadi": [1, 15], "also": [1, 3, 7, 11, 12, 14, 15], "altern": 6, "although": 15, "alwai": [9, 11, 15], "ambigu": [1, 6, 13], "ambiguouslookuperror": [1, 6, 13], "an": [1, 2, 3, 6, 8, 9, 11, 12, 13, 14, 15], "ani": [1, 4, 6, 12, 14], "annot": [1, 11], "anoth": [1, 7, 9, 14, 15], "anyth": [11, 15], "apart": 6, "appeal": 6, "appear": 1, "append_default_arg": 1, "appropri": 12, "ar": [1, 2, 6, 8, 11, 12, 13, 14, 15, 16], "arg": [1, 9, 12], "arg0": 12, "arg1": 12, "arg2": 12, "argsort": 1, "arguabl": 6, "argument": [1, 3, 8, 12, 13, 15], "around": [6, 11], "arrai": 6, "aspect": 6, "assum": 1, "asterisk": 11, "attempt": [1, 7, 11, 15], "attribut": 1, "attributeerror": 1, "author": 11, "automat": 12, "avail": [1, 3, 15], "b": [6, 11, 13, 14], "base": 11, "basic": [0, 10], "beartyp": 15, "becaus": [1, 6, 11, 12, 14, 15, 16], "becom": 15, "been": 1, "befor": [1, 2, 11, 15], "behav": 15, "behaviour": [6, 8, 15], "below": [6, 8, 11], "best": 12, "better": [1, 16], "between": 1, "bolden": 1, "bool": [1, 16], "boolean": 1, "both": 11, "box": 2, "break": [1, 2, 13, 16], "bring": [12, 15], "byte": 16, "bytes_": 16, "cach": [1, 15], "call": [1, 4, 8, 9, 11, 12, 15], "callabl": 1, "can": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16], "candid": [6, 8, 13], "cannot": [1, 7, 15], "case": [3, 6, 7, 11, 12, 15], "catch_warn": 14, "central": 6, "certain": 12, "certainli": 11, "challeng": 9, "chang": [1, 16], "check": [1, 6, 9, 12, 15], "chosen": 3, "circular": 15, "circumv": 4, "cl": [1, 6], "class": [2, 7, 13, 15], "classmethod": [1, 6, 12], "clear": [1, 15], "clear_all_cach": [1, 15], "clear_cach": 1, "clearli": 11, "click": 10, "clongdoubl": 16, "close": 6, "closest": [1, 8], "code": [1, 9, 11, 16], "collect": 9, "color": 1, "come": 6, "common": [1, 7], "compar": [1, 6], "complex128": 16, "complex256": 16, "complex64": 16, "compliant": 9, "complic": [6, 13], "comput": 1, "compute_dist": 1, "compute_mismatch": 1, "concaten": 5, "concess": 6, "concret": [1, 6, 12], "conserv": 15, "consid": [5, 6, 14, 16], "consist": 11, "constant": 15, "construct": 1, "constructor": 1, "contain": [1, 9, 15], "context": 1, "contrast": 11, "control": 1, "conveni": 1, "convent": 11, "conversion_funct": 7, "conversion_method": [1, 7], "convert": [1, 6, 11], "convienc": 12, "core": 16, "correct": 9, "correctli": 6, "correspond": 1, "could": [3, 4, 6, 8, 11, 12, 14, 15], "covari": [1, 12, 15], "covariantmeta": 1, "creat": [1, 8, 12, 14, 15], "current": 1, "custom": 15, "deactiv": 16, "deactivate_autoreload": [1, 2], "deactivate_union_alias": [1, 16], "decis": 11, "decor": [1, 7, 9, 12], "def": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16], "default": [1, 2], "defin": [1, 2, 4, 6, 14], "definit": [1, 14], "deliber": 1, "deliv": 15, "demonstr": 1, "denom": 7, "depend": [11, 15, 16], "deprec": 12, "deriv": 1, "describ": [6, 12], "design": [4, 13, 14], "desir": [1, 12, 16], "detail": 3, "detect": 15, "determin": 1, "dev": 15, "dict": [1, 15], "dictionari": 1, "did": 1, "differ": [1, 11], "difficult": 6, "directli": 12, "disabl": [1, 2], "discuss": 11, "dispatch": [2, 3, 4, 5, 7, 9, 12, 13, 15, 16], "dispatch_multi": 1, "dispatcherror": 6, "displai": [1, 16], "distanc": 1, "diverg": 9, "do": [1, 5, 9, 12, 15, 16], "docstr": 5, "doctest": 14, "document": 16, "doe": [1, 2, 7, 9, 11, 12], "domain": 12, "don": [12, 16], "done": 7, "dream": 6, "dtype": 6, "dtype_left": 6, "dtype_right": 6, "due": [1, 15], "e": [3, 6, 7, 8, 11, 12, 13, 15], "each": 15, "eager": 15, "eagertensor": 15, "earlier": 14, "edit": 1, "effici": 15, "either": [1, 2, 3, 15], "element": [13, 15, 16], "els": [6, 11], "enabl": 2, "ensur": 15, "environ": 2, "equival": 12, "erron": 15, "error": [1, 4, 6, 11], "establish": 15, "everi": 1, "exampl": [1, 6, 7, 8, 9, 11, 13, 15, 16], "excel": 3, "except": [1, 3, 6, 7, 8, 11, 12, 13, 15], "exclud": 1, "exhaust": 15, "exist": [1, 15], "expand": [1, 16], "expand_vararg": 1, "experiment": 2, "explicitli": 16, "explor": [0, 10], "export": 2, "extend": 1, "extens": 2, "extern": 8, "extract": [1, 12], "extract_return_typ": 1, "f": [1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15], "f_name": 1, "factori": 1, "fail": 1, "faith": 1, "fallback": [6, 15], "fals": [1, 12, 15], "fast": 12, "featur": [2, 16], "few": [6, 15, 16], "file": 2, "final": [9, 12], "find": [1, 6], "fine": 16, "first": [1, 5, 6, 9, 12, 14, 15], "fix": 6, "float": [1, 3, 4, 7, 8, 9, 11, 12, 14], "float128": 16, "float16": 16, "float32": 16, "float64": 16, "follow": [1, 4, 5, 6, 8, 9, 11, 12, 14, 15, 16], "form": 1, "found": [1, 6], "framework": 15, "from": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16], "from_cal": 1, "frozenset": 1, "fulli": [1, 15], "function": [3, 4, 5, 6, 7, 9, 11, 13, 15, 16], "function_nam": [1, 14], "futur": 15, "g": [11, 15], "gener": [6, 11], "get": [1, 4, 6, 12], "get_class": 1, "get_context": 1, "given": [1, 8, 11, 12], "gladli": 6, "global": 14, "goal": 1, "great": 6, "ha": [1, 6, 12], "hack": 1, "hand": 15, "handl": 6, "happen": [14, 15], "has_vararg": 1, "have": [1, 9, 11, 15], "haven": 3, "heavi": 6, "help": [5, 8, 12, 16], "here": [1, 12, 15], "highlight": 1, "hint": [1, 4, 6, 15], "hold": 1, "hood": 15, "how": [1, 7, 11, 12, 16], "hurrai": 16, "hyperlink": 1, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], "i_expect_that": 12, "i_expect_thi": 12, "idea": 9, "illustr": 11, "imagin": 4, "implement": [1, 3, 7, 8, 9, 11, 12, 14, 15, 16], "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16], "includ": [1, 2, 16], "incorrect": 12, "incur": 15, "inde": 6, "indic": [1, 7], "infer": [1, 12], "inform": [1, 12], "initialis": 12, "input": [1, 4], "inspect": 1, "instanc": [1, 12], "instanti": [1, 12], "instead": [3, 7, 9], "int": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15], "int16": 16, "int32": 16, "int64": [6, 16], "int8": 16, "integ": [3, 5, 9, 11, 12, 13, 15], "intent": [6, 16], "inter": 12, "intern": 2, "intorfloat": 1, "introspect": 1, "invalid": 1, "invari": 15, "invok": 1, "ipython": 4, "is_compar": 1, "is_faith": [1, 15], "is_in_class": 1, "isinst": [1, 6, 12, 15], "isn": 6, "issu": [2, 4], "issubclass": [1, 12, 15], "its": 16, "julia": [1, 3, 11, 15], "jupyt": 1, "just": [1, 6, 12, 15, 16], "keep": 14, "kei": [1, 16], "keyword": [1, 13], "kind": 1, "know": 7, "known": 9, "kw_arg": 1, "lambda": 1, "languag": [3, 11], "last": 4, "left": [1, 6, 12], "len": 12, "less": 15, "let": [3, 6, 7, 16], "level": 13, "lift": 6, "light": 1, "lighter": 1, "like": [2, 14, 15], "limit": 9, "link": 1, "list": [1, 3, 8, 15, 16], "liter": 15, "live": 1, "load": [2, 15], "longdoubl": 16, "longlong": 16, "look": 16, "loop": 15, "lot": 15, "mai": [1, 15], "main": [6, 11], "mainli": 1, "make": [1, 6, 11, 12], "mani": 16, "manual": 3, "map": 1, "master": 0, "match": [1, 6, 7, 11], "max_suggest": 1, "md": [13, 14], "mean": [6, 11, 12, 15], "mess": 6, "messag": [14, 16], "metaclass": [1, 6, 15], "method": [2, 3, 5, 6, 9, 11, 12, 14, 15], "methoderror": 6, "methodlist": 1, "might": 15, "mimic": 11, "mimick": 1, "mismatch": 1, "miss": 1, "mix": 15, "mixin": 1, "modifi": 1, "modul": [1, 4, 5, 8, 16], "moduletyp": 1, "moment": 9, "monkei": 1, "monkeypatch": 16, "more": [0, 3, 6, 9, 12, 13, 15, 16], "most": [2, 3, 4, 6], "mro": 1, "mul": 13, "mul_no_preced": 13, "multi": [1, 8], "multimethod": 6, "multipl": [1, 3, 9, 11], "multipledispatch": 6, "multipli": 8, "must": [1, 9, 11, 15, 16], "myclass": [4, 15], "mymeta": 15, "n": [1, 12, 15], "n_left": 12, "n_right": 12, "name": [1, 4, 11], "nameerror": 4, "namespac": 1, "navig": 1, "ndarrai": 6, "ndarraymeta": 6, "necessari": [1, 15], "necessarili": [3, 6], "need": [1, 14], "new": [1, 8, 14], "next": [6, 10, 16], "nice": 9, "nich": [6, 15], "non": 1, "none": [1, 4, 6, 11, 12, 15], "normal": [1, 9], "notabl": 6, "note": [1, 12, 14, 16], "notfoundlookuperror": [1, 3, 4, 8, 11, 12, 14, 15], "notimplementederror": 6, "now": [0, 12, 16], "nowher": 6, "np": [6, 16], "ntupl": 12, "num": 7, "number": [1, 3, 6, 7, 8, 12], "numer": 6, "numpi": [6, 16], "obj": 1, "obj1": 1, "obj2": 1, "object": [1, 4, 6, 7, 12, 13, 15, 16], "object_": 16, "obscur": 16, "obtain": 3, "occur": 15, "ok": [4, 11, 12], "old": 8, "omit": 16, "onc": [1, 15], "one": [1, 7, 9, 11, 15], "ones": [6, 15], "ongo": 11, "onli": [1, 5, 9, 11, 14, 15], "op": 15, "open": 2, "oper": [7, 13], "oppos": 15, "opt": 15, "optim": 15, "option": [1, 6, 11, 15, 16], "order": 6, "origin": 1, "original_class": 1, "other": [4, 11, 15], "other_packag": 14, "otherwis": [1, 11], "out": [1, 2], "output": 5, "overrid": [1, 2, 12], "overview": 3, "overwrit": 14, "own": 1, "owner": 1, "p": 1, "packag": [6, 10, 11, 14, 15], "paramet": [1, 6, 12, 16], "parametr": 15, "pars": 1, "part": 1, "particular": [1, 8, 11, 16], "pass": [1, 9, 13], "patch": 1, "pattern": [9, 11], "penalti": 15, "pep563": 1, "per": 15, "perform": [1, 7, 12], "pirat": 1, "plai": 9, "pleas": [2, 10], "plum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16], "plum_autoreload": 2, "pobj": 1, "point": 15, "posit": [1, 11], "possibl": [1, 6, 11, 15], "power": [13, 15], "preced": [1, 6], "precend": 13, "precis": [12, 16], "present": 1, "prevent": [5, 14, 16], "principl": 6, "print": [1, 3, 6, 7, 8, 11, 12, 13, 14, 15, 16], "prior": 9, "privat": 14, "problem": [4, 15, 16], "problemat": 11, "process": [11, 15], "produc": [1, 8, 9], "program": 11, "promis": 1, "promisedtyp": 1, "promot": 6, "properli": 9, "properti": [1, 4], "provid": [1, 6, 11, 12], "proxi": 15, "proxyint": 15, "purpos": 1, "py": 14, "python": [9, 15], "q": [1, 7], "qualifi": 1, "quickli": 12, "r": 1, "rais": [1, 3, 6, 12], "random": 15, "rather": [1, 16], "ration": 7, "rational_to_numb": 7, "real": [4, 6], "realli": 6, "reason": 9, "recent": 4, "recommend": [14, 15], "record": 14, "redefin": 1, "refer": 1, "refin": 12, "regard": 12, "regist": [1, 5, 14], "reli": 1, "reload": 2, "remov": 1, "render": 1, "repl": 6, "replac": 1, "repr": 1, "repr_mismatch": 1, "repr_pyfunct": 1, "repr_short": 1, "repr_source_path": 1, "repr_typ": 1, "repres": 1, "represent": 1, "requir": 1, "reregist": 1, "resolv": [1, 3, 4, 8, 11, 12, 14, 15], "resolvabletyp": 1, "resolve_method": 1, "resolve_type_hint": [1, 15], "restor": 1, "result": [7, 16], "retriev": 1, "return": [1, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16], "return_typ": [1, 14], "rich": 1, "rich_repr": 1, "right": [1, 6, 7, 12], "rule": [1, 3, 7], "run": [1, 4, 12, 14, 15], "safe": 15, "sai": 15, "same": [1, 3], "saniti": 6, "satisfi": 12, "scalar": 16, "scalar_typ": 16, "scan": 9, "scope": 1, "sctype": 16, "second": [1, 6, 9, 15], "section": 9, "see": [3, 11, 12, 16], "self": [1, 4, 6, 7, 12], "sensit": 11, "separ": 11, "seq": 1, "sequenc": 1, "serious": 6, "set": [1, 2, 4, 5, 6, 12, 13, 14, 15], "set_union_alia": [1, 16], "setter": 4, "shape": 6, "shape_left": 6, "shape_right": 6, "shorter": 1, "should": [1, 6, 7, 11, 15], "show": [1, 5], "shown": 1, "signatur": [6, 9, 14, 15], "similarli": [1, 6], "simplic": 12, "simplifi": [6, 13], "sinc": [3, 6, 15], "singl": 15, "size": 6, "skip": 16, "slow": [12, 15], "slowli": 12, "snippet": 6, "so": [3, 15], "solv": 16, "some": [1, 2, 12], "some_fil": 14, "someon": 14, "someth": [5, 9, 12], "sometyp": 1, "sort": 1, "sourc": 1, "special": 16, "specialint": 15, "specialis": [6, 13], "specialised_el": 13, "specialisedel": 13, "specif": [3, 12], "specifi": [1, 3, 9, 13, 15], "spread": 11, "stai": 6, "state": 11, "static": 1, "std": 15, "still": 1, "str": [1, 3, 4, 6, 7, 8, 9, 12, 15, 16], "str_": 16, "string": [1, 3, 9], "structur": 1, "stuff": 6, "style": 1, "subclass": [1, 12], "subtyp": [1, 12, 15], "succeed": 1, "sum": [9, 16], "super": 1, "superclass": 1, "support": 15, "suppos": 16, "syntax": 1, "system": 15, "t": [1, 3, 6, 12, 15, 16], "t1": [12, 15], "t2": [12, 15], "t_left": 12, "t_right": 12, "tabl": 2, "take": [6, 12], "taken": 6, "target": 1, "technic": 11, "tell": [7, 15], "tensor": 15, "tensorflow": 15, "text": 1, "tf": 15, "than": [1, 16], "thei": [11, 14, 15, 16], "them": [8, 9], "therefor": 15, "thereof": 1, "thi": [1, 3, 4, 6, 7, 9, 11, 12, 14, 15, 16], "thing": [6, 11], "those": 1, "through": 12, "throw": [1, 14], "thrown": [11, 14], "time": [0, 14, 15], "timeit": 15, "tool": [6, 9, 13], "traceback": 4, "treat": 1, "tri": 6, "true": [1, 6, 12, 14, 15], "truediv": 7, "try": [3, 4, 6, 7, 8, 11, 12, 13, 15], "tupl": [1, 6, 16], "turn": 1, "twice": 1, "two": [8, 9], "type": [3, 4, 8, 9, 11, 13, 14, 16], "type1": 1, "type2": 1, "type_from": [1, 7], "type_map": 1, "type_nonparametr": 1, "type_paramet": [1, 6, 12], "type_to": [1, 7], "type_unparametr": 1, "typeerror": 7, "typehint": 1, "typing_extens": 9, "u": 7, "uint16": 16, "uint32": 16, "uint64": 16, "uint8": 16, "ulonglong": 16, "un": 1, "under": 15, "understand": 16, "undesir": [6, 14], "undo": 1, "unfaith": 15, "unfaithfultyp": 1, "unfortun": [9, 15], "union": [6, 7, 8, 15], "uniont": 1, "unparametr": 1, "until": 16, "update_inst": 1, "us": [0, 1, 2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15], "usag": [8, 10], "usual": [5, 7, 9, 15], "vale": 1, "valid": [6, 12], "valu": [1, 4, 11, 13, 16], "valueerror": 12, "vararg": 1, "varargs_match": 1, "variabl": [1, 2], "varieti": [8, 9], "variou": 9, "ve": 0, "veri": [6, 11, 15], "version": [1, 9, 12, 16], "void": 16, "w": 14, "wa": 1, "wai": [0, 3, 9, 12, 16], "want": [14, 15, 16], "warn": 1, "warn_redefinit": [1, 14], "we": [1, 3, 4, 6, 8, 9, 12, 16], "welcom": 10, "well": 11, "what": [1, 6, 7, 12, 14, 15, 16], "when": [1, 4, 7, 8, 12, 15], "whenev": [1, 12, 14, 15], "where": [1, 2, 3, 15], "wherea": 11, "whether": [1, 6, 12, 15], "which": [1, 6, 9, 11, 12, 13, 15], "while": 16, "wildest": 6, "within": 4, "without": [1, 4, 6, 9, 11], "won": 16, "work": [1, 2, 6, 9, 11, 12, 16], "would": [11, 16], "wrap": 1, "wrap_lambda": 1, "wrapper": [1, 11, 12], "x": [1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16], "y": [6, 7, 8, 9, 11, 16], "ye": 15, "yet": [4, 15], "you": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16], "your": [2, 6, 9, 14, 15], "zero": 13, "zeroel": 13, "\u00b5": 15}, "titles": ["Advanced Usage", "Application Programming Interface", "Support for IPython Autoreload", "Basic Usage", "Classes", "Command Line Configuration Options", "Comparison with Other Multiple Dispatch Implementations", "Conversion and Promotion", "Ways to Dispatch", "Integration with Linters and <code class=\"docutils literal notranslate\"><span class=\"pre\">mypy</span></code>", "Plum", "Keyword Arguments", "Parametric Classes", "Method Precedence", "Scope of Functions", "Types", "Union Aliases"], "titleterms": {"": 6, "With": [6, 7], "abstract": 8, "advanc": 0, "alias": [1, 16], "anoth": 8, "applic": 1, "argument": 11, "autoreload": [1, 2], "basic": 3, "beartyp": 6, "care": 6, "class": [1, 4, 6, 12], "command": 5, "comparison": 6, "configur": 5, "construct": 12, "convers": [1, 7], "convert": 7, "customis": 12, "decor": 4, "default": 11, "defin": 8, "definit": [8, 15], "design": 6, "directli": 8, "dispatch": [1, 6, 8, 11, 14], "doesn": 11, "exampl": 12, "extend": 8, "faith": 15, "featur": 6, "forward": 4, "from": 8, "fulli": 11, "function": [1, 8, 14], "goal": 6, "i": 11, "implement": 6, "integr": 9, "interfac": 1, "invok": 8, "ipython": [1, 2], "julia": 6, "keyword": 11, "kind": 12, "line": 5, "linter": 9, "liter": 12, "method": [1, 8, 13], "mimic": 6, "moduletyp": 15, "multipl": [6, 8], "mypi": 9, "ndarrai": 12, "onc": 8, "oop": 6, "option": 5, "other": [1, 6], "overload": 9, "packag": 8, "parametr": [1, 6, 12], "perform": 15, "plum": 10, "plum_simple_doc": 5, "power": 6, "preced": 13, "program": 1, "promisedtyp": 15, "promot": [1, 7], "realli": 11, "redefinit": 14, "refer": 4, "return": 7, "rich": 6, "scope": 14, "signatur": 1, "support": [2, 9, 11], "synergi": 6, "system": 6, "t": 11, "type": [1, 6, 7, 12, 15], "union": [1, 16], "usag": [0, 3], "util": 1, "val": 12, "wai": 8, "want": 11, "warn": 14, "why": 11}})